---
- name: Configure MySQL Server
  hosts: mysql
  become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
    mysql_root_password: 'root_password'  # Set the root password for MySQL

  tasks:
    - name: Stop MySQL service if running
      service:
        name: mysql
        state: stopped
      ignore_errors: yes

    - name: Remove MySQL packages
      apt:
        name:
          - mysql-server
          - mysql-client
          - mysql-common
        state: absent
        purge: yes

    - name: Remove MySQL configuration and data files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/mysql
        - /var/lib/mysql

    - name: Remove MySQL user and group
      user:
        name: mysql
        state: absent
      ignore_errors: yes

    - name: Clean up unused packages
      apt:
        autoremove: yes
        autoclean: yes

    - name: Update package index
      apt:
        update_cache: yes

    - name: Install MySQL server
      apt:
        name: mysql-server
        state: present

    - name: Install pip3 if not installed
      apt:
        name: python3-pip
        state: present
        update_cache: yes

    - name: Install required MySQL Python module
      pip:
        name: PyMySQL
        state: present
      become: yes

    - name: Set the root password and configure MySQL authentication method
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        host: localhost
        login_unix_socket: /var/run/mysqld/mysqld.sock
        state: present
        priv: "*.*:ALL"
        login_password: "{{ mysql_root_password }}"

    - name: Wait for MySQL to start
      wait_for:
        port: 3306
        delay: 10
        timeout: 60

    - name: Secure MySQL installation
      expect:
        command: mysql_secure_installation
        responses:
          'Enter current password for root (enter for none):': "{{ mysql_root_password }}"
          'Set root password? [Y/n]': 'Y'
          'New password:': "{{ mysql_root_password }}"
          'Re-enter new password:': "{{ mysql_root_password }}"
          'Remove anonymous users? [Y/n]': 'Y'
          'Disallow root login remotely? [Y/n]': 'Y'
          'Remove test database and access to it? [Y/n]': 'Y'
          'Reload privilege tables now? [Y/n]': 'Y'
      become: yes
      ignore_errors: yes

    - name: Restart MySQL service
      service:
        name: mysql
        state: restarted

    - name: Ensure MySQL is running
      service:
        name: mysql
        state: started

    - name: Grant privileges to root user (ensure root can grant permissions)
      mysql_user:
        name: root
        host: localhost
        password: "{{ mysql_root_password }}"
        priv: "*.*:ALL"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Create Database and User
      mysql_user:
        name: web_user
        password: password
        priv: "*.*:ALL"
        host: "%"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Create Database
      mysql_db:
        name: testdb
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"

    - name: Create Sample Table
      mysql_query:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        query: |
          USE testdb;
          CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100));
          INSERT INTO users (name) VALUES ('Test User');
